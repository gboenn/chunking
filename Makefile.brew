# Makefile adapted for homebrew
# Makefile for chunking - last updated May 26 2017
# Makefile for chunking - last updated Aug 7 2017
    
SRCS = Alea.cpp AlgoComp.cpp Interpret.cpp Main.cpp Modul.cpp TextIO.cpp \
Power.cpp Visitor.cpp Farey.cpp FareyVisitor.cpp Ratio.cpp \
FareyFilter.cpp SmoothFilter.cpp ProbFilter.cpp PrimeFilter.cpp \
FareyFilterFarey.cpp DList.cpp SternBrocot.cpp ReciprocalFilter.cpp SubdivisionFilter.cpp \
Christoffel.cpp

HDRS = Alea.h AlgoComp.h Interpret.h Modul.h TextIO.h \
Power.h Visitor.h Farey.h FareyVisitor.h Ratio.h \
FareyFilter.h SmoothFilter.h ProbFilter.h PrimeFilter.h \
FareyFilterFarey.h DList.h SternBrocot.h ReciprocalFilter.h SubdivisionFilter.h \
Christoffel.h


OBJS = Alea.o AlgoComp.o Interpret.o Main.o Modul.o TextIO.o \
Power.o Visitor.o Farey.o FareyVisitor.o Ratio.o \
FareyFilter.o SmoothFilter.o ProbFilter.o PrimeFilter.o \
FareyFilterFarey.o DList.o SternBrocot.o ReciprocalFilter.o SubdivisionFilter.o \
Christoffel.o

CC = g++
#CC = g++-7
CFLAGS = -g -O0 -Wall
#CFLAGS = -O0 -Wall
#CFLAGS = -Os -Wno-deprecated-declarations -Wall -Wunused -Wno-format-y2k  -fno-exceptions -fno-strict-aliasing
#PROFILER = -pg
PROFILER =
TARGETS = chunking
LIBRARY = libchunking
#LIBPTHREADS = -lpthreads -framework Cocoa
LIBGC =
SQLITE = -lsqlite3
INCLUDES = 
BREWPATH = /usr/local/Cellar/chunking
CELLARPATH = $(BREWPATH)/1.2.5
SHAREPATH = $(CELLARPATH)/share

.PHONY: install uninstall

all: $(TARGETS) $(LIBRARY)

libchunking: $(OBJS) $(HDRS)
	$(CC) -dynamiclib $(PROFILER) $(OBJS) $(LIBGC) $(SQLITE) -o libchunking.dylib

chunking: $(OBJS) $(HDRS)
	$(CC) $(PROFILER) $(OBJS) $(LIBGC) $(SQLITE) -o chunking

clean:
	rm -f $(TARGETS) $(OBJS)

tidy:
	rm -f $(OBJS)

install:
	mkdir $(BREWPATH)
	mkdir $(CELLARPATH)
	cp chunking $(CELLARPATH)/.
	mkdir $(SHAREPATH)
	cp ./text/all_partitions_until_41_parts_only_2s_and_3s.txt $(SHAREPATH)
	cp ./text/all_COPRIME_partitions_until_120_with_2_distinct_parts.txt $(SHAREPATH)
	cp ./text/all_COPRIME_partitions_until_120_with_3_distinct_parts.txt $(SHAREPATH)
	cp ./text/all_COPRIME_partitions_until_120_with_4_distinct_parts.txt $(SHAREPATH)
	cp ./text/all_COPRIME_partitions_until_120_with_5_distinct_parts.txt $(SHAREPATH)
	cp ./text/resistor.txt $(SHAREPATH)
	cp ./text/release.txt $(SHAREPATH)
	cp ./text/arch.txt $(SHAREPATH)
	cp ./text/catenary.txt $(SHAREPATH)
	cp ./text/alternating.txt $(SHAREPATH)
	cp ./text/growth.txt $(SHAREPATH)
	cp ./text/decrease.txt $(SHAREPATH)
	cp ./text/bracelets.txt $(SHAREPATH)
	cp rhy.db $(SHAREPATH)
	mkdir $(CELLARPATH)/lib 
	cp libchunking.dylib $(CELLARPATH)/lib
	mkdir $(CELLARPATH)/include
	cp $(HDRS) $(CELLARPATH)/include


uninstall:
	rm $(CELLARPATH)/chunking
	rm -r $(CELLARPATH)/share/chunking/
	rm $(CELLARPATH)/lib/libchunking.dylib
	rm -r $(CELLARPATH)/include/chunking

	
Alea.o: Alea.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

AlgoComp.o: AlgoComp.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

DList.o: DList.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

Interpret.o: Interpret.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

Main.o: Main.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

Modul.o: Modul.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

TextIO.o: TextIO.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

Power.o: Power.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

Visitor.o: Visitor.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

Farey.o: Farey.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

FareyVisitor.o: FareyVisitor.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

Ratio.o: Ratio.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

FareyFilter.o: FareyFilter.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

FareyFilterFarey.o: FareyFilterFarey.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

SmoothFilter.o: SmoothFilter.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

ProbFilter.o: ProbFilter.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

OffbeatFilter.o: OffbeatFilter.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

PrimeFilter.o: PrimeFilter.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

SternBrocot.o: SternBrocot.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

ReciprocalFilter.o: ReciprocalFilter.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

SubdivisionFilter.o: SubdivisionFilter.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)

Christoffel.o: Christoffel.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $(@:.o=.cpp)





